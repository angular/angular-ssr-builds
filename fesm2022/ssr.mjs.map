{"version":3,"file":"ssr.mjs","sources":["../../../../../../../packages/angular/ssr/src/inline-css-processor.ts","../../../../../../../packages/angular/ssr/src/peformance-profiler.ts","../../../../../../../packages/angular/ssr/src/common-engine.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport Critters from 'critters';\nimport { readFile } from 'node:fs/promises';\n\n/**\n * Pattern used to extract the media query set by Critters in an `onload` handler.\n */\nconst MEDIA_SET_HANDLER_PATTERN = /^this\\.media=[\"'](.*)[\"'];?$/;\n\n/**\n * Name of the attribute used to save the Critters media query so it can be re-assigned on load.\n */\nconst CSP_MEDIA_ATTR = 'ngCspMedia';\n\n/**\n * Script text used to change the media value of the link tags.\n */\nconst LINK_LOAD_SCRIPT_CONTENT = [\n  `(() => {`,\n  // Save the `children` in a variable since they're a live DOM node collection.\n  // We iterate over the direct descendants, instead of going through a `querySelectorAll`,\n  // because we know that the tags will be directly inside the `head`.\n  `  const children = document.head.children;`,\n  // Declare `onLoad` outside the loop to avoid leaking memory.\n  // Can't be an arrow function, because we need `this` to refer to the DOM node.\n  `  function onLoad() {this.media = this.getAttribute('${CSP_MEDIA_ATTR}');}`,\n  // Has to use a plain for loop, because some browsers don't support\n  // `forEach` on `children` which is a `HTMLCollection`.\n  `  for (let i = 0; i < children.length; i++) {`,\n  `    const child = children[i];`,\n  `    child.hasAttribute('${CSP_MEDIA_ATTR}') && child.addEventListener('load', onLoad);`,\n  `  }`,\n  `})();`,\n].join('\\n');\n\nexport interface InlineCriticalCssProcessOptions {\n  outputPath?: string;\n}\n\nexport interface InlineCriticalCssProcessorOptions {\n  minify?: boolean;\n  deployUrl?: string;\n}\n\nexport interface InlineCriticalCssResult {\n  content: string;\n  warnings?: string[];\n  errors?: string[];\n}\n\n/** Partial representation of an `HTMLElement`. */\ninterface PartialHTMLElement {\n  getAttribute(name: string): string | null;\n  setAttribute(name: string, value: string): void;\n  hasAttribute(name: string): boolean;\n  removeAttribute(name: string): void;\n  appendChild(child: PartialHTMLElement): void;\n  remove(): void;\n  name: string;\n  textContent: string;\n  tagName: string | null;\n  children: PartialHTMLElement[];\n  next: PartialHTMLElement | null;\n  prev: PartialHTMLElement | null;\n}\n\n/** Partial representation of an HTML `Document`. */\ninterface PartialDocument {\n  head: PartialHTMLElement;\n  createElement(tagName: string): PartialHTMLElement;\n  querySelector(selector: string): PartialHTMLElement | null;\n}\n\n/** Signature of the `Critters.embedLinkedStylesheet` method. */\ntype EmbedLinkedStylesheetFn = (\n  link: PartialHTMLElement,\n  document: PartialDocument,\n) => Promise<unknown>;\n\nclass CrittersExtended extends Critters {\n  readonly warnings: string[] = [];\n  readonly errors: string[] = [];\n  private initialEmbedLinkedStylesheet: EmbedLinkedStylesheetFn;\n  private addedCspScriptsDocuments = new WeakSet<PartialDocument>();\n  private documentNonces = new WeakMap<PartialDocument, string | null>();\n\n  // Inherited from `Critters`, but not exposed in the typings.\n  protected declare embedLinkedStylesheet: EmbedLinkedStylesheetFn;\n\n  constructor(\n    readonly optionsExtended: InlineCriticalCssProcessorOptions & InlineCriticalCssProcessOptions,\n    private readonly resourceCache: Map<string, string>,\n  ) {\n    super({\n      logger: {\n        warn: (s: string) => this.warnings.push(s),\n        error: (s: string) => this.errors.push(s),\n        info: () => {},\n      },\n      logLevel: 'warn',\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      // Note: if `preload` changes to anything other than `media`, the logic in\n      // `embedLinkedStylesheetOverride` will have to be updated.\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true,\n    });\n\n    // We can't use inheritance to override `embedLinkedStylesheet`, because it's not declared in\n    // the `Critters` .d.ts which means that we can't call the `super` implementation. TS doesn't\n    // allow for `super` to be cast to a different type.\n    this.initialEmbedLinkedStylesheet = this.embedLinkedStylesheet;\n    this.embedLinkedStylesheet = this.embedLinkedStylesheetOverride;\n  }\n\n  public override async readFile(path: string): Promise<string> {\n    let resourceContent = this.resourceCache.get(path);\n    if (resourceContent === undefined) {\n      resourceContent = await readFile(path, 'utf-8');\n      this.resourceCache.set(path, resourceContent);\n    }\n\n    return resourceContent;\n  }\n\n  /**\n   * Override of the Critters `embedLinkedStylesheet` method\n   * that makes it work with Angular's CSP APIs.\n   */\n  private embedLinkedStylesheetOverride: EmbedLinkedStylesheetFn = async (link, document) => {\n    if (link.getAttribute('media') === 'print' && link.next?.name === 'noscript') {\n      // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n      // NB: this is only needed for the webpack based builders.\n      const media = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n      if (media) {\n        link.removeAttribute('onload');\n        link.setAttribute('media', media[1]);\n        link?.next?.remove();\n      }\n    }\n\n    const returnValue = await this.initialEmbedLinkedStylesheet(link, document);\n    const cspNonce = this.findCspNonce(document);\n\n    if (cspNonce) {\n      const crittersMedia = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n\n      if (crittersMedia) {\n        // If there's a Critters-generated `onload` handler and the file has an Angular CSP nonce,\n        // we have to remove the handler, because it's incompatible with CSP. We save the value\n        // in a different attribute and we generate a script tag with the nonce that uses\n        // `addEventListener` to apply the media query instead.\n        link.removeAttribute('onload');\n        link.setAttribute(CSP_MEDIA_ATTR, crittersMedia[1]);\n        this.conditionallyInsertCspLoadingScript(document, cspNonce);\n      }\n\n      // Ideally we would hook in at the time Critters inserts the `style` tags, but there isn't\n      // a way of doing that at the moment so we fall back to doing it any time a `link` tag is\n      // inserted. We mitigate it by only iterating the direct children of the `<head>` which\n      // should be pretty shallow.\n      document.head.children.forEach((child) => {\n        if (child.tagName === 'style' && !child.hasAttribute('nonce')) {\n          child.setAttribute('nonce', cspNonce);\n        }\n      });\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Finds the CSP nonce for a specific document.\n   */\n  private findCspNonce(document: PartialDocument): string | null {\n    if (this.documentNonces.has(document)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.documentNonces.get(document)!;\n    }\n\n    // HTML attribute are case-insensitive, but the parser used by Critters is case-sensitive.\n    const nonceElement = document.querySelector('[ngCspNonce], [ngcspnonce]');\n    const cspNonce =\n      nonceElement?.getAttribute('ngCspNonce') || nonceElement?.getAttribute('ngcspnonce') || null;\n\n    this.documentNonces.set(document, cspNonce);\n\n    return cspNonce;\n  }\n\n  /**\n   * Inserts the `script` tag that swaps the critical CSS at runtime,\n   * if one hasn't been inserted into the document already.\n   */\n  private conditionallyInsertCspLoadingScript(document: PartialDocument, nonce: string): void {\n    if (this.addedCspScriptsDocuments.has(document)) {\n      return;\n    }\n\n    if (document.head.textContent.includes(LINK_LOAD_SCRIPT_CONTENT)) {\n      // Script was already added during the build.\n      this.addedCspScriptsDocuments.add(document);\n\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.setAttribute('nonce', nonce);\n    script.textContent = LINK_LOAD_SCRIPT_CONTENT;\n    // Append the script to the head since it needs to\n    // run as early as possible, after the `link` tags.\n    document.head.appendChild(script);\n    this.addedCspScriptsDocuments.add(document);\n  }\n}\n\nexport class InlineCriticalCssProcessor {\n  private readonly resourceCache = new Map<string, string>();\n\n  constructor(protected readonly options: InlineCriticalCssProcessorOptions) {}\n\n  async process(\n    html: string,\n    options: InlineCriticalCssProcessOptions,\n  ): Promise<InlineCriticalCssResult> {\n    const critters = new CrittersExtended({ ...this.options, ...options }, this.resourceCache);\n    const content = await critters.process(html);\n\n    return {\n      content,\n      errors: critters.errors.length ? critters.errors : undefined,\n      warnings: critters.warnings.length ? critters.warnings : undefined,\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst PERFORMANCE_MARK_PREFIX = 'üÖ∞Ô∏è';\n\nexport function printPerformanceLogs(): void {\n  let maxWordLength = 0;\n  const benchmarks: [step: string, value: string][] = [];\n\n  for (const { name, duration } of performance.getEntriesByType('measure')) {\n    if (!name.startsWith(PERFORMANCE_MARK_PREFIX)) {\n      continue;\n    }\n\n    // `üÖ∞Ô∏è:Retrieve SSG Page` -> `Retrieve SSG Page:`\n    const step = name.slice(PERFORMANCE_MARK_PREFIX.length + 1) + ':';\n    if (step.length > maxWordLength) {\n      maxWordLength = step.length;\n    }\n\n    benchmarks.push([step, `${duration.toFixed(1)}ms`]);\n    performance.clearMeasures(name);\n  }\n\n  /* eslint-disable no-console */\n  console.log('********** Performance results **********');\n  for (const [step, value] of benchmarks) {\n    const spaces = maxWordLength - step.length + 5;\n    console.log(step + ' '.repeat(spaces) + value);\n  }\n  console.log('*****************************************');\n  /* eslint-enable no-console */\n}\n\nexport async function runMethodAndMeasurePerf<T>(\n  label: string,\n  asyncMethod: () => Promise<T>,\n): Promise<T> {\n  const labelName = `${PERFORMANCE_MARK_PREFIX}:${label}`;\n  const startLabel = `start:${labelName}`;\n  const endLabel = `end:${labelName}`;\n\n  try {\n    performance.mark(startLabel);\n\n    return await asyncMethod();\n  } finally {\n    performance.mark(endLabel);\n    performance.measure(labelName, startLabel, endLabel);\n    performance.clearMarks(startLabel);\n    performance.clearMarks(endLabel);\n  }\n}\n\nexport function noopRunMethodAndMeasurePerf<T>(\n  label: string,\n  asyncMethod: () => Promise<T>,\n): Promise<T> {\n  return asyncMethod();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ApplicationRef, StaticProvider, Type } from '@angular/core';\nimport {\n  INITIAL_CONFIG,\n  renderApplication,\n  renderModule,\n  …µSERVER_CONTEXT,\n} from '@angular/platform-server';\nimport * as fs from 'node:fs';\nimport { dirname, resolve } from 'node:path';\nimport { URL } from 'node:url';\nimport { InlineCriticalCssProcessor, InlineCriticalCssResult } from './inline-css-processor';\nimport {\n  noopRunMethodAndMeasurePerf,\n  printPerformanceLogs,\n  runMethodAndMeasurePerf,\n} from './peformance-profiler';\n\nconst SSG_MARKER_REGEXP = /ng-server-context=[\"']\\w*\\|?ssg\\|?\\w*[\"']/;\n\nexport interface CommonEngineOptions {\n  /** A method that when invoked returns a promise that returns an `ApplicationRef` instance once resolved or an NgModule. */\n  bootstrap?: Type<{}> | (() => Promise<ApplicationRef>);\n  /** A set of platform level providers for all requests. */\n  providers?: StaticProvider[];\n  /** Enable request performance profiling data collection and printing the results in the server console. */\n  enablePeformanceProfiler?: boolean;\n}\n\nexport interface CommonEngineRenderOptions {\n  /** A method that when invoked returns a promise that returns an `ApplicationRef` instance once resolved or an NgModule. */\n  bootstrap?: Type<{}> | (() => Promise<ApplicationRef>);\n  /** A set of platform level providers for the current request. */\n  providers?: StaticProvider[];\n  url?: string;\n  document?: string;\n  documentFilePath?: string;\n  /**\n   * Reduce render blocking requests by inlining critical CSS.\n   * Defaults to true.\n   */\n  inlineCriticalCss?: boolean;\n  /**\n   * Base path location of index file.\n   * Defaults to the 'documentFilePath' dirname when not provided.\n   */\n  publicPath?: string;\n}\n\n/**\n * A common engine to use to server render an application.\n */\n\nexport class CommonEngine {\n  private readonly templateCache = new Map<string, string>();\n  private readonly inlineCriticalCssProcessor: InlineCriticalCssProcessor;\n  private readonly pageIsSSG = new Map<string, boolean>();\n\n  constructor(private options?: CommonEngineOptions) {\n    this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor({\n      minify: false,\n    });\n  }\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: CommonEngineRenderOptions): Promise<string> {\n    const enablePeformanceProfiler = this.options?.enablePeformanceProfiler;\n\n    const runMethod = enablePeformanceProfiler\n      ? runMethodAndMeasurePerf\n      : noopRunMethodAndMeasurePerf;\n\n    let html = await runMethod('Retrieve SSG Page', () => this.retrieveSSGPage(opts));\n\n    if (html === undefined) {\n      html = await runMethod('Render Page', () => this.renderApplication(opts));\n\n      if (opts.inlineCriticalCss !== false) {\n        const { content, errors, warnings } = await runMethod('Inline Critical CSS', () =>\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this.inlineCriticalCss(html!, opts),\n        );\n\n        html = content;\n\n        // eslint-disable-next-line no-console\n        warnings?.forEach((m) => console.warn(m));\n        // eslint-disable-next-line no-console\n        errors?.forEach((m) => console.error(m));\n      }\n    }\n\n    if (enablePeformanceProfiler) {\n      printPerformanceLogs();\n    }\n\n    return html;\n  }\n\n  private inlineCriticalCss(\n    html: string,\n    opts: CommonEngineRenderOptions,\n  ): Promise<InlineCriticalCssResult> {\n    return this.inlineCriticalCssProcessor.process(html, {\n      outputPath: opts.publicPath ?? (opts.documentFilePath ? dirname(opts.documentFilePath) : ''),\n    });\n  }\n\n  private async retrieveSSGPage(opts: CommonEngineRenderOptions): Promise<string | undefined> {\n    const { publicPath, documentFilePath, url } = opts;\n    if (!publicPath || !documentFilePath || url === undefined) {\n      return undefined;\n    }\n\n    const pathname = canParseUrl(url) ? new URL(url).pathname : url;\n    // Remove leading forward slash.\n    const pagePath = resolve(publicPath, pathname.substring(1), 'index.html');\n\n    if (pagePath !== resolve(documentFilePath)) {\n      // View path doesn't match with prerender path.\n      const pageIsSSG = this.pageIsSSG.get(pagePath);\n      if (pageIsSSG === undefined) {\n        if (await exists(pagePath)) {\n          const content = await fs.promises.readFile(pagePath, 'utf-8');\n          const isSSG = SSG_MARKER_REGEXP.test(content);\n          this.pageIsSSG.set(pagePath, isSSG);\n\n          if (isSSG) {\n            return content;\n          }\n        } else {\n          this.pageIsSSG.set(pagePath, false);\n        }\n      } else if (pageIsSSG) {\n        // Serve pre-rendered page.\n        return fs.promises.readFile(pagePath, 'utf-8');\n      }\n    }\n\n    return undefined;\n  }\n\n  private async renderApplication(opts: CommonEngineRenderOptions): Promise<string> {\n    const extraProviders: StaticProvider[] = [\n      { provide: …µSERVER_CONTEXT, useValue: 'ssr' },\n      ...(opts.providers ?? []),\n      ...(this.options?.providers ?? []),\n    ];\n\n    let document = opts.document;\n    if (!document && opts.documentFilePath) {\n      document = await this.getDocument(opts.documentFilePath);\n    }\n\n    if (document) {\n      extraProviders.push({\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document,\n          url: opts.url,\n        },\n      });\n    }\n\n    const moduleOrFactory = this.options?.bootstrap ?? opts.bootstrap;\n    if (!moduleOrFactory) {\n      throw new Error('A module or bootstrap option must be provided.');\n    }\n\n    return isBootstrapFn(moduleOrFactory)\n      ? renderApplication(moduleOrFactory, { platformProviders: extraProviders })\n      : renderModule(moduleOrFactory, { extraProviders });\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private async getDocument(filePath: string): Promise<string> {\n    let doc = this.templateCache.get(filePath);\n\n    if (!doc) {\n      doc = await fs.promises.readFile(filePath, 'utf-8');\n      this.templateCache.set(filePath, doc);\n    }\n\n    return doc;\n  }\n}\n\nasync function exists(path: fs.PathLike): Promise<boolean> {\n  try {\n    await fs.promises.access(path, fs.constants.F_OK);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isBootstrapFn(value: unknown): value is () => Promise<ApplicationRef> {\n  // We can differentiate between a module and a bootstrap function by reading compiler-generated `…µmod` static property:\n  return typeof value === 'function' && !('…µmod' in value);\n}\n\n// The below can be removed in favor of URL.canParse() when Node.js 18 is dropped\nfunction canParseUrl(url: string): boolean {\n  try {\n    return !!new URL(url);\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}